/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jp.co.soramitsu.iroha;

public class irohaJNI {
  public final static native long new_ByteVector__SWIG_0();
  public final static native long new_ByteVector__SWIG_1(long jarg1);
  public final static native long ByteVector_size(long jarg1, ByteVector jarg1_);
  public final static native long ByteVector_capacity(long jarg1, ByteVector jarg1_);
  public final static native void ByteVector_reserve(long jarg1, ByteVector jarg1_, long jarg2);
  public final static native boolean ByteVector_isEmpty(long jarg1, ByteVector jarg1_);
  public final static native void ByteVector_clear(long jarg1, ByteVector jarg1_);
  public final static native void ByteVector_add(long jarg1, ByteVector jarg1_, short jarg2);
  public final static native short ByteVector_get(long jarg1, ByteVector jarg1_, int jarg2);
  public final static native void ByteVector_set(long jarg1, ByteVector jarg1_, int jarg2, short jarg3);
  public final static native void delete_ByteVector(long jarg1);
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1);
  public final static native long StringVector_size(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native void StringVector_add(long jarg1, StringVector jarg1_, String jarg2);
  public final static native String StringVector_get(long jarg1, StringVector jarg1_, int jarg2);
  public final static native void StringVector_set(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_HashVector();
  public final static native long HashVector_size(long jarg1, HashVector jarg1_);
  public final static native long HashVector_capacity(long jarg1, HashVector jarg1_);
  public final static native void HashVector_reserve(long jarg1, HashVector jarg1_, long jarg2);
  public final static native boolean HashVector_isEmpty(long jarg1, HashVector jarg1_);
  public final static native void HashVector_clear(long jarg1, HashVector jarg1_);
  public final static native void HashVector_add(long jarg1, HashVector jarg1_, long jarg2, Hash jarg2_);
  public final static native long HashVector_get(long jarg1, HashVector jarg1_, int jarg2);
  public final static native void HashVector_set(long jarg1, HashVector jarg1_, int jarg2, long jarg3, Hash jarg3_);
  public final static native void delete_HashVector(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1);
  public final static native long IntVector_size(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native void IntVector_add(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_get(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_set(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_SignatureVector__SWIG_0();
  public final static native long new_SignatureVector__SWIG_1(long jarg1);
  public final static native long SignatureVector_size(long jarg1, SignatureVector jarg1_);
  public final static native long SignatureVector_capacity(long jarg1, SignatureVector jarg1_);
  public final static native void SignatureVector_reserve(long jarg1, SignatureVector jarg1_, long jarg2);
  public final static native boolean SignatureVector_isEmpty(long jarg1, SignatureVector jarg1_);
  public final static native void SignatureVector_clear(long jarg1, SignatureVector jarg1_);
  public final static native void SignatureVector_add(long jarg1, SignatureVector jarg1_, long jarg2, Signature jarg2_);
  public final static native long SignatureVector_get(long jarg1, SignatureVector jarg1_, int jarg2);
  public final static native void SignatureVector_set(long jarg1, SignatureVector jarg1_, int jarg2, long jarg3, Signature jarg3_);
  public final static native void delete_SignatureVector(long jarg1);
  public final static native String toBinaryString(long jarg1, Blob jarg1_);
  public final static native long new_Blob__SWIG_0();
  public final static native long new_Blob__SWIG_1(String jarg1);
  public final static native long new_Blob__SWIG_2(long jarg1, ByteVector jarg1_);
  public final static native long Blob_fromHexString(String jarg1);
  public final static native long Blob_blob(long jarg1, Blob jarg1_);
  public final static native String Blob_hex(long jarg1, Blob jarg1_);
  public final static native long Blob_size(long jarg1, Blob jarg1_);
  public final static native String Blob_toString(long jarg1, Blob jarg1_);
  public final static native boolean Blob_b_equal(long jarg1, Blob jarg1_, long jarg2, Blob jarg2_);
  public final static native void delete_Blob(long jarg1);
  public final static native int BatchType_ATOMIC_get();
  public final static native int BatchType_ORDERED_get();
  public final static native long Signature_publicKey(long jarg1, Signature jarg1_);
  public final static native long Signature_signedData(long jarg1, Signature jarg1_);
  public final static native boolean Signature_equal(long jarg1, Signature jarg1_, long jarg2, Signature jarg2_);
  public final static native String Signature_toString(long jarg1, Signature jarg1_);
  public final static native void delete_Signature(long jarg1);
  public final static native int permissionFor(int jarg1);
  public final static native boolean isValid__SWIG_0(int jarg1);
  public final static native boolean isValid__SWIG_1(int jarg1);
  public final static native long new_PublicKey__SWIG_0(String jarg1);
  public final static native long new_PublicKey__SWIG_1(long jarg1, Blob jarg1_);
  public final static native String PublicKey_toString(long jarg1, PublicKey jarg1_);
  public final static native void delete_PublicKey(long jarg1);
  public final static native long new_PrivateKey__SWIG_0(String jarg1);
  public final static native long new_PrivateKey__SWIG_1(long jarg1, Blob jarg1_);
  public final static native String PrivateKey_toString(long jarg1, PrivateKey jarg1_);
  public final static native void delete_PrivateKey(long jarg1);
  public final static native long Hash_Hasher_hash_invoke(long jarg1, Hash.Hasher jarg1_, long jarg2, Hash jarg2_);
  public final static native long new_Hash_Hasher();
  public final static native void delete_Hash_Hasher(long jarg1);
  public final static native long new_Hash__SWIG_0();
  public final static native long new_Hash__SWIG_1(String jarg1);
  public final static native long new_Hash__SWIG_2(long jarg1, Blob jarg1_);
  public final static native long Hash_fromHexString(String jarg1);
  public final static native String Hash_toString(long jarg1, Hash jarg1_);
  public final static native void delete_Hash(long jarg1);
  public final static native long new_Keypair(long jarg1, PublicKey jarg1_, long jarg2, PrivateKey jarg2_);
  public final static native long Keypair_publicKey(long jarg1, Keypair jarg1_);
  public final static native long Keypair_privateKey(long jarg1, Keypair jarg1_);
  public final static native boolean Keypair_kp_equal(long jarg1, Keypair jarg1_, long jarg2, Keypair jarg2_);
  public final static native String Keypair_toString(long jarg1, Keypair jarg1_);
  public final static native void delete_Keypair(long jarg1);
  public final static native long new_Signed__SWIG_0(String jarg1);
  public final static native long new_Signed__SWIG_1(long jarg1, ByteVector jarg1_);
  public final static native long new_Signed__SWIG_2(long jarg1, Blob jarg1_);
  public final static native String Signed_toString(long jarg1, Signed jarg1_);
  public final static native void delete_Signed(long jarg1);
  public final static native long new_Transaction__SWIG_0(long jarg1);
  public final static native long new_Transaction__SWIG_2(long jarg1, Transaction jarg1_);
  public final static native void delete_Transaction(long jarg1);
  public final static native String Transaction_creatorAccountId(long jarg1, Transaction jarg1_);
  public final static native long Transaction_blob(long jarg1, Transaction jarg1_);
  public final static native long Transaction_payload(long jarg1, Transaction jarg1_);
  public final static native long Transaction_reducedPayload(long jarg1, Transaction jarg1_);
  public final static native long Transaction_reducedHash(long jarg1, Transaction jarg1_);
  public final static native boolean Transaction_addSignature(long jarg1, Transaction jarg1_, long jarg2, Signed jarg2_, long jarg3, PublicKey jarg3_);
  public final static native long Transaction_getTransport(long jarg1, Transaction jarg1_);
  public final static native java.math.BigInteger Transaction_createdTime(long jarg1, Transaction jarg1_);
  public final static native int Transaction_quorum(long jarg1, Transaction jarg1_);
  public final static native long Transaction_batchMeta(long jarg1, Transaction jarg1_);
  public final static native long Transaction_signs(long jarg1, Transaction jarg1_);
  public final static native long new_Query__SWIG_0(long jarg1, Query jarg1_);
  public final static native long new_Query__SWIG_2(long jarg1);
  public final static native void delete_Query(long jarg1);
  public final static native String Query_creatorAccountId(long jarg1, Query jarg1_);
  public final static native java.math.BigInteger Query_queryCounter(long jarg1, Query jarg1_);
  public final static native long Query_blob(long jarg1, Query jarg1_);
  public final static native long Query_payload(long jarg1, Query jarg1_);
  public final static native boolean Query_addSignature(long jarg1, Query jarg1_, long jarg2, Signed jarg2_, long jarg3, PublicKey jarg3_);
  public final static native java.math.BigInteger Query_createdTime(long jarg1, Query jarg1_);
  public final static native long Query_getTransport(long jarg1, Query jarg1_);
  public final static native long Query_signs(long jarg1, Query jarg1_);
  public final static native long new_BlocksQuery__SWIG_1(long jarg1, BlocksQuery jarg1_);
  public final static native String BlocksQuery_creatorAccountId(long jarg1, BlocksQuery jarg1_);
  public final static native java.math.BigInteger BlocksQuery_queryCounter(long jarg1, BlocksQuery jarg1_);
  public final static native long BlocksQuery_blob(long jarg1, BlocksQuery jarg1_);
  public final static native long BlocksQuery_payload(long jarg1, BlocksQuery jarg1_);
  public final static native boolean BlocksQuery_addSignature(long jarg1, BlocksQuery jarg1_, long jarg2, Signed jarg2_, long jarg3, PublicKey jarg3_);
  public final static native java.math.BigInteger BlocksQuery_createdTime(long jarg1, BlocksQuery jarg1_);
  public final static native long BlocksQuery_signs(long jarg1, BlocksQuery jarg1_);
  public final static native void delete_BlocksQuery(long jarg1);
  public final static native long new_ModelTransactionBuilder();
  public final static native long ModelTransactionBuilder_creatorAccountId(long jarg1, ModelTransactionBuilder jarg1_, String jarg2);
  public final static native long ModelTransactionBuilder_createdTime(long jarg1, ModelTransactionBuilder jarg1_, java.math.BigInteger jarg2);
  public final static native long ModelTransactionBuilder_quorum(long jarg1, ModelTransactionBuilder jarg1_, int jarg2);
  public final static native long ModelTransactionBuilder_batchMeta(long jarg1, ModelTransactionBuilder jarg1_, int jarg2, long jarg3, HashVector jarg3_);
  public final static native long ModelTransactionBuilder_addAssetQuantity(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3);
  public final static native long ModelTransactionBuilder_addPeer(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, long jarg3, PublicKey jarg3_);
  public final static native long ModelTransactionBuilder_addSignatory(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, long jarg3, PublicKey jarg3_);
  public final static native long ModelTransactionBuilder_removeSignatory(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, long jarg3, PublicKey jarg3_);
  public final static native long ModelTransactionBuilder_appendRole(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3);
  public final static native long ModelTransactionBuilder_createAsset(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3, short jarg4);
  public final static native long ModelTransactionBuilder_createAccount(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3, long jarg4, PublicKey jarg4_);
  public final static native long ModelTransactionBuilder_createDomain(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3);
  public final static native long ModelTransactionBuilder_createRole(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, long jarg3, RolePermissionSet jarg3_);
  public final static native long ModelTransactionBuilder_detachRole(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3);
  public final static native long ModelTransactionBuilder_grantPermission(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, int jarg3);
  public final static native long ModelTransactionBuilder_revokePermission(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, int jarg3);
  public final static native long ModelTransactionBuilder_setAccountDetail(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long ModelTransactionBuilder_setAccountQuorum(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, int jarg3);
  public final static native long ModelTransactionBuilder_subtractAssetQuantity(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3);
  public final static native long ModelTransactionBuilder_transferAsset(long jarg1, ModelTransactionBuilder jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6);
  public final static native long ModelTransactionBuilder_build(long jarg1, ModelTransactionBuilder jarg1_);
  public final static native void delete_ModelTransactionBuilder(long jarg1);
  public final static native long new_ModelQueryBuilder();
  public final static native long ModelQueryBuilder_createdTime(long jarg1, ModelQueryBuilder jarg1_, java.math.BigInteger jarg2);
  public final static native long ModelQueryBuilder_creatorAccountId(long jarg1, ModelQueryBuilder jarg1_, String jarg2);
  public final static native long ModelQueryBuilder_queryCounter(long jarg1, ModelQueryBuilder jarg1_, java.math.BigInteger jarg2);
  public final static native long ModelQueryBuilder_getAccount(long jarg1, ModelQueryBuilder jarg1_, String jarg2);
  public final static native long ModelQueryBuilder_getSignatories(long jarg1, ModelQueryBuilder jarg1_, String jarg2);
  public final static native long ModelQueryBuilder_getAccountTransactions__SWIG_0(long jarg1, ModelQueryBuilder jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native long ModelQueryBuilder_getAccountTransactions__SWIG_1(long jarg1, ModelQueryBuilder jarg1_, String jarg2, int jarg3);
  public final static native long ModelQueryBuilder_getAccountAssetTransactions__SWIG_0(long jarg1, ModelQueryBuilder jarg1_, String jarg2, String jarg3, int jarg4, long jarg5);
  public final static native long ModelQueryBuilder_getAccountAssetTransactions__SWIG_1(long jarg1, ModelQueryBuilder jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native long ModelQueryBuilder_getAccountAssets(long jarg1, ModelQueryBuilder jarg1_, String jarg2);
  public final static native long ModelQueryBuilder_getRoles(long jarg1, ModelQueryBuilder jarg1_);
  public final static native long ModelQueryBuilder_getAssetInfo(long jarg1, ModelQueryBuilder jarg1_, String jarg2);
  public final static native long ModelQueryBuilder_getRolePermissions(long jarg1, ModelQueryBuilder jarg1_, String jarg2);
  public final static native long ModelQueryBuilder_getTransactions(long jarg1, ModelQueryBuilder jarg1_, long jarg2, HashVector jarg2_);
  public final static native long ModelQueryBuilder_getAccountDetail__SWIG_0(long jarg1, ModelQueryBuilder jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long ModelQueryBuilder_getAccountDetail__SWIG_1(long jarg1, ModelQueryBuilder jarg1_, String jarg2, String jarg3);
  public final static native long ModelQueryBuilder_getAccountDetail__SWIG_2(long jarg1, ModelQueryBuilder jarg1_, String jarg2);
  public final static native long ModelQueryBuilder_getAccountDetail__SWIG_3(long jarg1, ModelQueryBuilder jarg1_);
  public final static native long ModelQueryBuilder_getPendingTransactions(long jarg1, ModelQueryBuilder jarg1_);
  public final static native long ModelQueryBuilder_build(long jarg1, ModelQueryBuilder jarg1_);
  public final static native void delete_ModelQueryBuilder(long jarg1);
  public final static native long new_ModelBlocksQueryBuilder();
  public final static native long ModelBlocksQueryBuilder_createdTime(long jarg1, ModelBlocksQueryBuilder jarg1_, java.math.BigInteger jarg2);
  public final static native long ModelBlocksQueryBuilder_creatorAccountId(long jarg1, ModelBlocksQueryBuilder jarg1_, String jarg2);
  public final static native long ModelBlocksQueryBuilder_queryCounter(long jarg1, ModelBlocksQueryBuilder jarg1_, java.math.BigInteger jarg2);
  public final static native long ModelBlocksQueryBuilder_build(long jarg1, ModelBlocksQueryBuilder jarg1_);
  public final static native void delete_ModelBlocksQueryBuilder(long jarg1);
  public final static native long ModelCrypto_generateKeypair(long jarg1, ModelCrypto jarg1_);
  public final static native long ModelCrypto_fromPrivateKey(long jarg1, ModelCrypto jarg1_, String jarg2);
  public final static native long ModelCrypto_convertFromExisting(long jarg1, ModelCrypto jarg1_, String jarg2, String jarg3);
  public final static native long new_ModelCrypto();
  public final static native void delete_ModelCrypto(long jarg1);
  public final static native void validateTransaction(long jarg1, ByteVector jarg1_);
  public final static native void validateQuery(long jarg1, ByteVector jarg1_);
  public final static native long signTransaction(long jarg1, ByteVector jarg1_, long jarg2, Keypair jarg2_);
  public final static native long signQuery(long jarg1, ByteVector jarg1_, long jarg2, Keypair jarg2_);
  public final static native long hashTransaction(long jarg1, ByteVector jarg1_);
  public final static native long hashQuery(long jarg1, ByteVector jarg1_);
  public final static native long utxReducedHash(long jarg1, UnsignedTx jarg1_);
  public final static native long new_UnsignedTx__SWIG_0(long jarg1, Transaction jarg1_);
  public final static native long new_UnsignedTx__SWIG_2(long jarg1, UnsignedTx jarg1_);
  public final static native long UnsignedTx_signAndAddSignature(long jarg1, UnsignedTx jarg1_, long jarg2, Keypair jarg2_);
  public final static native long UnsignedTx_finish(long jarg1, UnsignedTx jarg1_);
  public final static native long UnsignedTx_hash(long jarg1, UnsignedTx jarg1_);
  public final static native void delete_UnsignedTx(long jarg1);
  public final static native long new_UnsignedQuery__SWIG_0(long jarg1, Query jarg1_);
  public final static native long new_UnsignedQuery__SWIG_2(long jarg1, UnsignedQuery jarg1_);
  public final static native long UnsignedQuery_signAndAddSignature(long jarg1, UnsignedQuery jarg1_, long jarg2, Keypair jarg2_);
  public final static native long UnsignedQuery_finish(long jarg1, UnsignedQuery jarg1_);
  public final static native long UnsignedQuery_hash(long jarg1, UnsignedQuery jarg1_);
  public final static native void delete_UnsignedQuery(long jarg1);
  public final static native long new_UnsignedBlockQuery__SWIG_0(long jarg1, BlocksQuery jarg1_);
  public final static native long new_UnsignedBlockQuery__SWIG_2(long jarg1, UnsignedBlockQuery jarg1_);
  public final static native long UnsignedBlockQuery_signAndAddSignature(long jarg1, UnsignedBlockQuery jarg1_, long jarg2, Keypair jarg2_);
  public final static native long UnsignedBlockQuery_finish(long jarg1, UnsignedBlockQuery jarg1_);
  public final static native long UnsignedBlockQuery_hash(long jarg1, UnsignedBlockQuery jarg1_);
  public final static native void delete_UnsignedBlockQuery(long jarg1);
  public final static native long new_ModelProtoTransaction(long jarg1, UnsignedTx jarg1_);
  public final static native long ModelProtoTransaction_signAndAddSignature(long jarg1, ModelProtoTransaction jarg1_, long jarg2, Keypair jarg2_);
  public final static native long ModelProtoTransaction_finish(long jarg1, ModelProtoTransaction jarg1_);
  public final static native void delete_ModelProtoTransaction(long jarg1);
  public final static native long new_ModelProtoQuery(long jarg1, UnsignedQuery jarg1_);
  public final static native long ModelProtoQuery_signAndAddSignature(long jarg1, ModelProtoQuery jarg1_, long jarg2, Keypair jarg2_);
  public final static native long ModelProtoQuery_finish(long jarg1, ModelProtoQuery jarg1_);
  public final static native void delete_ModelProtoQuery(long jarg1);
  public final static native long new_ModelProtoBlocksQuery(long jarg1, UnsignedBlockQuery jarg1_);
  public final static native long ModelProtoBlocksQuery_signAndAddSignature(long jarg1, ModelProtoBlocksQuery jarg1_, long jarg2, Keypair jarg2_);
  public final static native long ModelProtoBlocksQuery_finish(long jarg1, ModelProtoBlocksQuery jarg1_);
  public final static native void delete_ModelProtoBlocksQuery(long jarg1);
  public final static native long new_RolePermissionSet__SWIG_0();
  public final static native long new_RolePermissionSet__SWIG_1(String jarg1);
  public final static native String RolePermissionSet_toBitstring(long jarg1, RolePermissionSet jarg1_);
  public final static native long RolePermissionSet_size();
  public final static native long RolePermissionSet_reset(long jarg1, RolePermissionSet jarg1_);
  public final static native long RolePermissionSet_set__SWIG_0(long jarg1, RolePermissionSet jarg1_);
  public final static native long RolePermissionSet_set__SWIG_1(long jarg1, RolePermissionSet jarg1_, int jarg2);
  public final static native long RolePermissionSet_unset(long jarg1, RolePermissionSet jarg1_, int jarg2);
  public final static native boolean RolePermissionSet_test(long jarg1, RolePermissionSet jarg1_, int jarg2);
  public final static native boolean RolePermissionSet_none(long jarg1, RolePermissionSet jarg1_);
  public final static native boolean RolePermissionSet_isSubsetOf(long jarg1, RolePermissionSet jarg1_, long jarg2, RolePermissionSet jarg2_);
  public final static native boolean RolePermissionSet_equal(long jarg1, RolePermissionSet jarg1_, long jarg2, RolePermissionSet jarg2_);
  public final static native boolean RolePermissionSet_not_equal(long jarg1, RolePermissionSet jarg1_, long jarg2, RolePermissionSet jarg2_);
  public final static native long RolePermissionSet_bset_and(long jarg1, RolePermissionSet jarg1_, long jarg2, RolePermissionSet jarg2_);
  public final static native long RolePermissionSet_bset_or(long jarg1, RolePermissionSet jarg1_, long jarg2, RolePermissionSet jarg2_);
  public final static native long RolePermissionSet_bset_xor(long jarg1, RolePermissionSet jarg1_, long jarg2, RolePermissionSet jarg2_);
  public final static native void RolePermissionSet_iterate(long jarg1, RolePermissionSet jarg1_, long jarg2);
  public final static native long new_RolePermissionSet__SWIG_2(long jarg1, IntVector jarg1_);
  public final static native void delete_RolePermissionSet(long jarg1);
  public final static native long new_GrantablePermissionSet__SWIG_0();
  public final static native long new_GrantablePermissionSet__SWIG_1(String jarg1);
  public final static native String GrantablePermissionSet_toBitstring(long jarg1, GrantablePermissionSet jarg1_);
  public final static native long GrantablePermissionSet_size();
  public final static native long GrantablePermissionSet_reset(long jarg1, GrantablePermissionSet jarg1_);
  public final static native long GrantablePermissionSet_set__SWIG_0(long jarg1, GrantablePermissionSet jarg1_);
  public final static native long GrantablePermissionSet_set__SWIG_1(long jarg1, GrantablePermissionSet jarg1_, int jarg2);
  public final static native long GrantablePermissionSet_unset(long jarg1, GrantablePermissionSet jarg1_, int jarg2);
  public final static native boolean GrantablePermissionSet_test(long jarg1, GrantablePermissionSet jarg1_, int jarg2);
  public final static native boolean GrantablePermissionSet_none(long jarg1, GrantablePermissionSet jarg1_);
  public final static native boolean GrantablePermissionSet_isSubsetOf(long jarg1, GrantablePermissionSet jarg1_, long jarg2, GrantablePermissionSet jarg2_);
  public final static native boolean GrantablePermissionSet_equal(long jarg1, GrantablePermissionSet jarg1_, long jarg2, GrantablePermissionSet jarg2_);
  public final static native boolean GrantablePermissionSet_not_equal(long jarg1, GrantablePermissionSet jarg1_, long jarg2, GrantablePermissionSet jarg2_);
  public final static native long GrantablePermissionSet_bset_and(long jarg1, GrantablePermissionSet jarg1_, long jarg2, GrantablePermissionSet jarg2_);
  public final static native long GrantablePermissionSet_bset_or(long jarg1, GrantablePermissionSet jarg1_, long jarg2, GrantablePermissionSet jarg2_);
  public final static native long GrantablePermissionSet_bset_xor(long jarg1, GrantablePermissionSet jarg1_, long jarg2, GrantablePermissionSet jarg2_);
  public final static native void GrantablePermissionSet_iterate(long jarg1, GrantablePermissionSet jarg1_, long jarg2);
  public final static native long new_GrantablePermissionSet__SWIG_2(long jarg1, IntVector jarg1_);
  public final static native void delete_GrantablePermissionSet(long jarg1);
  public final static native long PublicKey_SWIGUpcast(long jarg1);
  public final static native long PrivateKey_SWIGUpcast(long jarg1);
  public final static native long Hash_SWIGUpcast(long jarg1);
  public final static native long Signed_SWIGUpcast(long jarg1);
}
